#[allow(unused_imports)]
use mylib::{RadicalBasisFunctionNetwork, init_rbf, train_rbf_rosenblatt, predict_rbf_classification, free_rbf};

fn main() {
    let x: Vec<Vec<f32>> = vec![
        vec![ 0.5618494 , -0.96608213],
        vec![-0.05380274,  0.5139979 ],
        vec![-0.97588308,  0.65096079],
        vec![-0.61936379, -0.3828173 ],
        vec![ 0.69467003,  0.59475517],
        vec![ 0.63512783, -0.22967754],
        vec![ 0.58811432, -0.39226154],
        vec![-0.86567844,  0.82333027],
        vec![-0.72939222,  0.16835478],
        vec![-0.68197084, -0.50259566],
        vec![-0.79673494, -0.60112084],
        vec![ 0.06678205,  0.61795485],
        vec![-0.4189008 ,  0.80975558],
        vec![-0.39317333,  0.59490069],
        vec![-0.82256237,  0.02777759],
        vec![-0.95586172,  0.98008931],
        vec![-0.94777158,  0.51153351],
        vec![ 0.89245236, -0.50191194],
        vec![-0.976167  , -0.9312571 ],
        vec![-0.08349615,  0.6718108 ],
        vec![-0.55821051,  0.78156947],
        vec![ 0.08450351, -0.80593249],
        vec![ 0.40378895, -0.66062356],
        vec![ 0.41634225, -0.02880869],
        vec![-0.096445  , -0.32917634],
        vec![-0.4398438 ,  0.58602372],
        vec![-0.78197967, -0.31574217],
        vec![ 0.7600218 , -0.32621228],
        vec![-0.0850413 , -0.76653163],
        vec![-0.88199105,  0.44411491],
        vec![-0.40074248,  0.54329635],
        vec![ 0.6266055 , -0.82298047],
        vec![ 0.53684371, -0.33469426],
        vec![ 0.23627858,  0.7205723 ],
        vec![-0.00782867,  0.76848995],
        vec![ 0.72475561,  0.36237621],
        vec![-0.13454995, -0.47591078],
        vec![ 0.96663456,  0.1734748 ],
        vec![-0.71231934,  0.32398602],
        vec![-0.55556991,  0.7809355 ],
        vec![-0.72360384, -0.78527363],
        vec![-0.51144504,  0.04708859],
        vec![-0.39325461,  0.39458042],
        vec![-0.53644684,  0.40599344],
        vec![-0.18970032, -0.49959743],
        vec![ 0.69389198,  0.28076895],
        vec![-0.57648775,  0.68828024],
        vec![ 0.09836403, -0.6676649 ],
        vec![-0.87069787,  0.47878354],
        vec![-0.26290331, -0.16219545],
        vec![ 0.8079026 ,  0.60194507],
        vec![-0.67938917, -0.58009931],
        vec![-0.50880124, -0.77457169],
        vec![-0.28742726, -0.32022575],
        vec![-0.16259009, -0.08805434],
        vec![-0.83027476, -0.30739657],
        vec![ 0.00596667,  0.70826425],
        vec![ 0.33257117,  0.46326082],
        vec![-0.71282335, -0.78015673],
        vec![-0.31921903,  0.10105117],
        vec![-0.91156844, -0.96189154],
        vec![ 0.60469655, -0.63045329],
        vec![ 0.72284247, -0.84749341],
        vec![-0.34685317,  0.59295455],
        vec![-0.08799658, -0.29715008],
        vec![ 0.1858339 , -0.51468486],
        vec![ 0.57910498, -0.56041266],
        vec![ 0.04765419, -0.39594507],
        vec![-0.40763186, -0.61733939],
        vec![-0.10275758, -0.23125802],
        vec![ 0.34334547,  0.068712  ],
        vec![-0.30409864, -0.66041185],
        vec![ 0.30120223,  0.78046173],
        vec![-0.3016952 , -0.78756081],
        vec![ 0.75225653,  0.95670076],
        vec![-0.17137857,  0.50911055],
        vec![ 0.91193178, -0.24563342],
        vec![ 0.26712615,  0.14522079],
        vec![ 0.17534952, -0.47156808],
        vec![ 0.71458833,  0.19025628],
        vec![ 0.210361  ,  0.97279699],
        vec![ 0.50460954, -0.466507  ],
        vec![-0.75402964,  0.64758804],
        vec![-0.34204461, -0.93657005],
        vec![ 0.48549379, -0.05642657],
        vec![ 0.65910746, -0.13386731],
        vec![-0.89502735,  0.23760905],
        vec![ 0.6308006 , -0.71550864],
        vec![ 0.21108932,  0.07364775],
        vec![ 0.45988595, -0.32759396],
        vec![-0.95302744,  0.52946758],
        vec![ 0.48547944, -0.09360658],
        vec![ 0.13843412, -0.0497818 ],
        vec![ 0.45950757,  0.6249615 ],
        vec![-0.62917901,  0.75401714],
        vec![-0.72235485,  0.85917003],
        vec![ 0.24143719, -0.54532436],
        vec![ 0.74537661, -0.43988583],
        vec![-0.61587929,  0.50685095],
        vec![ 0.32217647, -0.45179621],
        vec![-0.47007821,  0.85075821],
        vec![ 0.89900345,  0.87145204],
        vec![-0.01019292,  0.96831875],
        vec![ 0.32563178, -0.3926659 ],
        vec![-0.08791545, -0.31886213],
        vec![ 0.36897532,  0.80926494],
        vec![ 0.45447909,  0.04693188],
        vec![ 0.36737445,  0.47915532],
        vec![ 0.44251431, -0.05323824],
        vec![ 0.09756806,  0.52369763],
        vec![-0.70254196,  0.70744542],
        vec![-0.01706806, -0.27720633],
        vec![ 0.81051205, -0.37711948],
        vec![ 0.70786767,  0.11422904],
        vec![ 0.22642319, -0.53285697],
        vec![ 0.24839237,  0.19403381],
        vec![-0.12345694, -0.88221272],
        vec![ 0.805121  , -0.88149137],
        vec![-0.12889485,  0.26281464],
        vec![-0.67950421,  0.67641591],
        vec![-0.54488197, -0.70429866],
        vec![-0.32666937, -0.91310748],
        vec![ 0.67180042, -0.86242902],
        vec![-0.47541298,  0.11984414],
        vec![-0.71229638, -0.94389799],
        vec![-0.56147305,  0.97374677],
        vec![ 0.03867633,  0.35371825],
        vec![-0.74489862,  0.31785117],
        vec![ 0.66179558,  0.54026629],
        vec![ 0.50099824,  0.0470741 ],
        vec![-0.22593818, -0.82092725],
        vec![ 0.80898032, -0.34828208],
        vec![-0.73749908,  0.32283368],
        vec![ 0.96685423, -0.28174268],
        vec![-0.62490094, -0.93429396],
        vec![ 0.59658745,  0.68336987],
        vec![-0.41469731, -0.72203397],
        vec![ 0.39997334, -0.93192015],
        vec![-0.62831006,  0.44358317],
        vec![ 0.86496795, -0.61150411],
        vec![-0.25468024,  0.47478018],
        vec![-0.67591946,  0.15029312],
        vec![ 0.20329634, -0.45016396],
        vec![ 0.67188467, -0.33772786],
        vec![-0.22387015,  0.94926582],
        vec![ 0.25580538, -0.56219983],
        vec![ 0.5736322 ,  0.23441419],
        vec![ 0.02510526,  0.21014484],
        vec![-0.74521238,  0.3190439 ],
        vec![-0.94877366, -0.56549192],
        vec![ 0.45467721,  0.70382649],
        vec![ 0.98742903, -0.05344052],
        vec![ 0.79840822, -0.14737989],
        vec![ 0.40382399,  0.91148284],
        vec![-0.39592177,  0.80226382],
        vec![-0.06306958, -0.07760955],
        vec![-0.55759798,  0.44707966],
        vec![ 0.107263  , -0.99870868],
        vec![-0.46507231,  0.71784591],
        vec![ 0.70217586, -0.44536371],
        vec![ 0.37980356,  0.0920075 ],
        vec![-0.08332304, -0.97763872],
        vec![-0.74721888,  0.09717058],
        vec![-0.82955303,  0.119755  ],
        vec![-0.53606517,  0.90171075],
        vec![-0.09878946,  0.58433359],
        vec![-0.84963793,  0.62044263],
        vec![-0.58149862, -0.47579774],
        vec![ 0.31656707, -0.92945273],
        vec![-0.19728911, -0.5623761 ],
        vec![ 0.23631451,  0.90786653],
        vec![-0.67819679,  0.25358101],
        vec![ 0.55919697,  0.91688481],
        vec![-0.29756422,  0.66476825],
        vec![-0.1265513 , -0.33151549],
        vec![ 0.11708529,  0.62887985],
        vec![-0.67204568,  0.42148582],
        vec![-0.7326395 , -0.12726848],
        vec![ 0.5262526 ,  0.03208588],
        vec![-0.48412882, -0.17194517],
        vec![ 0.27201204, -0.21293554],
        vec![-0.24176579,  0.75270511],
        vec![-0.96113682,  0.82214838],
        vec![ 0.48741938,  0.7901834 ],
        vec![ 0.16211827, -0.71137476],
        vec![ 0.86266045, -0.59200556],
        vec![-0.32462014,  0.86386373],
        vec![ 0.32904902, -0.82871565],
        vec![ 0.93928893,  0.42720941],
        vec![-0.63825859,  0.71258068],
        vec![ 0.04923392,  0.83541745],
        vec![ 0.78800629, -0.44921424],
        vec![-0.52985235, -0.88513459],
        vec![-0.25548919,  0.22712935],
        vec![ 0.85975173, -0.06542704],
        vec![-0.24961007, -0.52230055],
        vec![-0.23431742, -0.86216529],
        vec![ 0.35471105,  0.77425094],
        vec![-0.29317659, -0.22116939],
        vec![-0.11338019, -0.62117618],
        vec![-0.33345485, -0.12261077],
        vec![ 0.46450381,  0.8644556 ],
        vec![ 0.62053576,  0.64779132],
        vec![ 0.09140112,  0.65533506],
        vec![-0.69595457, -0.29172406],
        vec![-0.52499628, -0.96847307],
        vec![-0.8747705 ,  0.90682746],
        vec![-0.62851895,  0.3883777 ],
        vec![-0.48451575, -0.3312576 ],
        vec![-0.4109023 , -0.14946694],
        vec![ 0.16458678,  0.93541073],
        vec![ 0.69909409, -0.4131244 ],
        vec![ 0.23798367,  0.84329084],
        vec![ 0.19248716, -0.55528472],
        vec![-0.58898407,  0.7013143 ],
        vec![ 0.86948834, -0.16033733],
        vec![-0.22024416, -0.53093898],
        vec![-0.92688503, -0.36094161],
        vec![-0.24538093,  0.77984894],
        vec![-0.77630037, -0.59549312],
        vec![ 0.12792399,  0.2374312 ],
        vec![ 0.92175091,  0.37936695],
        vec![ 0.8210257 , -0.62829729],
        vec![-0.43295813, -0.26976774],
        vec![ 0.85709725,  0.86080369],
        vec![ 0.40457327, -0.59991079],
        vec![-0.38581319, -0.70107498],
        vec![ 0.32219452, -0.23857684],
        vec![ 0.90613532, -0.04239445],
        vec![-0.03813417, -0.36458302],
        vec![-0.74799549,  0.807539  ],
        vec![-0.34606473,  0.68794157],
        vec![ 0.37338548,  0.78074574],
        vec![-0.80349242, -0.95763796],
        vec![-0.61927289, -0.39016605],
        vec![-0.393154  , -0.43442922],
        vec![ 0.48817227,  0.94364781],
        vec![ 0.86446458, -0.51125562],
        vec![-0.08551201, -0.68602118],
        vec![-0.13790315, -0.08357878],
        vec![-0.33004888,  0.08896598],
        vec![ 0.91616044,  0.50804421],
        vec![ 0.32032594, -0.97568297],
        vec![ 0.42788523,  0.41999674],
        vec![-0.41230136, -0.12477444],
        vec![ 0.55293818, -0.87105964],
        vec![-0.38038622,  0.19887226],
        vec![-0.6082714 ,  0.82394069],
        vec![-0.52997747,  0.2918854 ],
        vec![-0.83996914, -0.04261496],
        vec![-0.71351183, -0.80972568],
        vec![ 0.36741648, -0.94528411],
        vec![-0.81000966,  0.23830601],
        vec![ 0.43207371,  0.36785176],
        vec![ 0.44577979,  0.79834261],
        vec![ 0.06700786, -0.90112715],
        vec![-0.66857084,  0.41837262],
        vec![-0.28659188, -0.88664115],
        vec![ 0.53784635,  0.3580243 ],
        vec![ 0.87277269, -0.98894097],
        vec![ 0.95303749, -0.75187096],
        vec![ 0.57431391, -0.51253708],
        vec![-0.48964258,  0.87943362],
        vec![-0.22095045,  0.32907555],
        vec![-0.36273404,  0.60327778],
        vec![-0.60708286,  0.49241286],
        vec![ 0.25703923, -0.70606554],
        vec![-0.64940854,  0.5439129 ],
        vec![-0.25386974,  0.19834634],
        vec![ 0.93345516,  0.71255722],
        vec![ 0.0667118 , -0.21173792],
        vec![-0.1850813 ,  0.70153733],
        vec![ 0.11447463,  0.70033162],
        vec![-0.48683113,  0.38371218],
        vec![-0.10198503, -0.03405114],
        vec![ 0.4361025 ,  0.24774134],
        vec![-0.02681141,  0.84998441],
        vec![-0.11936559,  0.10314869],
        vec![ 0.91930294, -0.58913619],
        vec![ 0.12977993, -0.22366409],
        vec![-0.86548738, -0.36770167],
        vec![ 0.02800489,  0.62947958],
        vec![-0.62992348,  0.93356256],
        vec![ 0.11370658,  0.85394056],
        vec![-0.52370864, -0.2885672 ],
        vec![-0.98646856, -0.40212407],
        vec![ 0.41542021, -0.9754506 ],
        vec![ 0.84378217, -0.17190534],
        vec![-0.66873041,  0.43575936],
        vec![ 0.37722183,  0.1650699 ],
        vec![ 0.08528977,  0.99139643],
        vec![-0.25305975, -0.40393027],
        vec![ 0.93049149,  0.81323172],
        vec![ 0.42839019,  0.3789535 ],
        vec![-0.8876331 ,  0.61824524],
        vec![-0.41626484,  0.23305214],
        vec![ 0.78692078,  0.10390545],
        vec![ 0.6271226 ,  0.50716349],
        vec![ 0.51905117, -0.51334053],
        vec![ 0.65795601, -0.57139288],
        vec![-0.5242998 ,  0.73635759],
        vec![-0.20764244, -0.38592217],
        vec![ 0.14654679,  0.05027924],
        vec![-0.06396082,  0.28073401],
        vec![ 0.97585563, -0.00924934],
        vec![-0.43222348, -0.80487956],
        vec![-0.46113274,  0.94612013],
        vec![ 0.78084391, -0.17723821],
        vec![ 0.27989035, -0.68197607],
        vec![-0.43145256, -0.7704176 ],
        vec![-0.62661143, -0.05298788],
        vec![-0.18869376,  0.78343085],
        vec![ 0.95900919, -0.26171892],
        vec![-0.01431405, -0.66760098],
        vec![ 0.50329737,  0.89526086],
        vec![ 0.89409054, -0.72861625],
        vec![ 0.44599609, -0.78054045],
        vec![-0.64037125,  0.13802664],
        vec![ 0.71876437,  0.89152849],
        vec![ 0.66874005, -0.18428608],
        vec![-0.50575515,  0.13803898],
        vec![ 0.52379277, -0.07051736],
        vec![-0.20096226, -0.01746016],
        vec![-0.82959659,  0.6812282 ],
        vec![-0.27191926, -0.03923782],
        vec![-0.83060241, -0.9517176 ],
        vec![-0.69108268,  0.1277818 ],
        vec![ 0.454061  , -0.99555979],
        vec![ 0.64635061, -0.95105759],
        vec![-0.44459524,  0.19329439],
        vec![ 0.21990795, -0.99421132],
        vec![-0.62625075,  0.72353662],
        vec![-0.14382345,  0.04280426],
        vec![ 0.34251535, -0.90824923],
        vec![-0.26005866,  0.40431483],
        vec![-0.57465337, -0.61244156],
        vec![ 0.85427766, -0.45898178],
        vec![-0.79729024, -0.58356058],
        vec![-0.93325439, -0.36083349],
        vec![ 0.05758884, -0.03023675],
        vec![ 0.50233508, -0.18384631],
        vec![ 0.79788544,  0.20120072],
        vec![ 0.71849863, -0.24883982],
        vec![ 0.48082192,  0.02365416],
        vec![ 0.29951601,  0.16278312],
        vec![ 0.04152097,  0.56508898],
        vec![-0.03311196,  0.04263771],
        vec![-0.47586694, -0.53711189],
        vec![-0.70921003, -0.98299869],
        vec![ 0.67479436, -0.07431341],
        vec![-0.21462819,  0.54593107],
        vec![-0.44503411, -0.48159638],
        vec![ 0.05500052, -0.30743848],
        vec![-0.79004833, -0.97250898],
        vec![-0.86883618, -0.91795425],
        vec![-0.68348539,  0.65737979],
        vec![-0.27143555, -0.55590653],
        vec![ 0.6917082 ,  0.14739663],
        vec![ 0.71664162,  0.85043977],
        vec![ 0.03988107,  0.97867191],
        vec![-0.61543617, -0.98030357],
        vec![ 0.71813849,  0.09372945],
        vec![ 0.22491333, -0.96951196],
        vec![ 0.86991678, -0.2525927 ],
        vec![ 0.80581564,  0.59702186],
        vec![ 0.77445954,  0.77140734],
        vec![-0.44611814,  0.963785  ],
        vec![ 0.75411605,  0.83241718],
        vec![-0.70215607,  0.05334083],
        vec![-0.07083606, -0.66740215],
        vec![ 0.03326696, -0.65867583],
        vec![-0.6726603 , -0.31371362],
        vec![-0.30385054,  0.624722  ],
        vec![ 0.75257163,  0.1250072 ],
        vec![ 0.77706948,  0.34204286],
        vec![ 0.69254213,  0.21839039],
        vec![ 0.84377702, -0.71310599],
        vec![ 0.62349954, -0.19056208],
        vec![ 0.436331  ,  0.44597082],
        vec![-0.51851993, -0.37896828],
        vec![-0.62615228,  0.50912955],
        vec![ 0.64984693, -0.25497258],
        vec![ 0.07129894, -0.04170961],
        vec![-0.74153849, -0.14557613],
        vec![ 0.37563104, -0.4727612 ],
        vec![ 0.04385036, -0.26197461],
        vec![ 0.69392879, -0.66209353],
        vec![ 0.55548441,  0.15554229],
        vec![ 0.08455794, -0.9500264 ],
        vec![-0.66138713, -0.78850273],
        vec![ 0.13930421,  0.53472617],
        vec![ 0.61993037,  0.50704057],
        vec![ 0.09853363, -0.08240506],
        vec![ 0.14317412,  0.72072254],
        vec![-0.58976063,  0.32170471],
        vec![-0.50064157, -0.27490715],
        vec![ 0.93498823, -0.36336074],
        vec![ 0.59815905,  0.06792564],
        vec![-0.35323304, -0.66680176],
        vec![ 0.08563552, -0.35022974],
        vec![-0.10599821, -0.14778809],
        vec![-0.90830156, -0.85062206],
        vec![-0.44111235, -0.09295768],
        vec![ 0.77017122,  0.50176449],
        vec![ 0.26991734,  0.63446239],
        vec![-0.43960686, -0.17427341],
        vec![ 0.59012642, -0.89968149],
        vec![ 0.10487734, -0.33739958],
        vec![-0.47226005, -0.48225629],
        vec![ 0.82596941, -0.02166748],
        vec![-0.72886084,  0.2259617 ],
        vec![-0.87101895, -0.961282  ],
        vec![ 0.6731121 , -0.72336795],
        vec![ 0.85437182,  0.54419635],
        vec![ 0.6941713 ,  0.58699926],
        vec![ 0.72634721,  0.90888567],
        vec![-0.06897481, -0.27361198],
        vec![-0.23929346,  0.14293006],
        vec![ 0.55496625,  0.03363052],
        vec![-0.97675184,  0.1359673 ],
        vec![ 0.89328562, -0.04296861],
        vec![-0.2521153 , -0.73200195],
        vec![ 0.82300054,  0.23985979],
        vec![-0.10387283,  0.12376169],
        vec![-0.79998524, -0.86166707],
        vec![-0.787221  , -0.47502273],
        vec![-0.30813867,  0.44435143],
        vec![ 0.34015281, -0.61081343],
        vec![-0.91175379, -0.10831562],
        vec![-0.26621254,  0.64504865],
        vec![-0.80463561, -0.98000839],
        vec![-0.45298564,  0.28536165],
        vec![-0.81420708,  0.96388004],
        vec![-0.62842222, -0.41357922],
        vec![-0.52944595,  0.22744198],
        vec![-0.1413488 , -0.60764296],
        vec![-0.23065926, -0.77889614],
        vec![-0.96093153,  0.00990306],
        vec![ 0.54653317, -0.41474891],
        vec![-0.12772947, -0.72921108],
        vec![ 0.61733104,  0.0245522 ],
        vec![ 0.85469599, -0.83861735],
        vec![ 0.94198236,  0.41157787],
        vec![-0.64272453, -0.29889249],
        vec![-0.21455813, -0.25668379],
        vec![-0.24761094,  0.92269392],
        vec![-0.61179368,  0.84637883],
        vec![ 0.0042992 , -0.66930422],
        vec![-0.964173  ,  0.06989809],
        vec![ 0.70550098, -0.89226116],
        vec![-0.47865176, -0.98350715],
        vec![ 0.14826559,  0.62586446],
        vec![-0.38483054, -0.58376509],
        vec![-0.97006067, -0.91220057],
        vec![-0.44105107, -0.75904455],
        vec![ 0.38864708,  0.33314059],
        vec![-0.89639311,  0.09948987],
        vec![-0.54750049, -0.08920724],
        vec![-0.47673328, -0.46512407],
        vec![-0.39277137, -0.53265351],
        vec![ 0.86890043,  0.26923639],
        vec![ 0.13661925, -0.55977702],
        vec![-0.48339141,  0.60913054],
        vec![-0.55205948,  0.49449633],
        vec![-0.5516559 ,  0.90890837],
        vec![ 0.50894654,  0.03650888],
        vec![ 0.06421116,  0.98365928],
        vec![-0.82071242,  0.87343407],
        vec![-0.1348406 ,  0.35872932],
        vec![ 0.8435757 , -0.33339108],
        vec![ 0.44221891, -0.27013696],
        vec![-0.75766715,  0.36635322],
        vec![-0.02576569,  0.07871689],
        vec![-0.93771091,  0.41808376],
        vec![ 0.19424688,  0.97865111],
        vec![ 0.72835741,  0.30586899],
        vec![-0.46781731,  0.02213412],
        vec![ 0.60281841,  0.65531757],
        vec![ 0.49523402,  0.92735039],
        vec![-0.89150155,  0.34615248],
        vec![ 0.1959909 ,  0.29549538],
        vec![ 0.37515013, -0.82756   ],
        vec![ 0.80008333, -0.01922205],
        vec![ 0.87411331,  0.37478259],
        vec![-0.52909682,  0.47211186],
        vec![-0.37655086,  0.62445154],
        vec![ 0.25811367, -0.22004489],
        vec![ 0.80300863,  0.06813236],
        vec![-0.44694843,  0.63002332],
        vec![-0.10866148, -0.32557503],
        vec![ 0.15780679, -0.31112971],
        vec![-0.69303753,  0.90334947],
        vec![-0.55742636,  0.43203733],
        vec![-0.10862536,  0.24267591],
        vec![-0.27698313, -0.2662976 ],
        vec![-0.92150466,  0.85184622],
        vec![ 0.14846089,  0.24077789],
        vec![-0.01634686,  0.92045619],
        vec![-0.67699323, -0.5828757 ],
        vec![-0.42698239,  0.47184771],
    ];
    let y: Vec<f32> = vec![
           -1.0,  1.0, -1.0, -1.0, -1.0,  1.0, -1.0, -1.0,  1.0, -1.0, -1.0,  1.0, -1.0, -1.0,  1.0, -1.0, -1.0, -1.0, -1.0,  1.0, -1.0,  1.0, -1.0,  1.0,
           1.0, -1.0, -1.0, -1.0,  1.0, -1.0, -1.0, -1.0, -1.0,  1.0,  1.0, -1.0,  1.0,  1.0, -1.0, -1.0, -1.0,  1.0, -1.0, -1.0,  1.0,  1.0, -1.0,  1.0,
           -1.0,  1.0, -1.0, -1.0, -1.0,  1.0,  1.0, -1.0,  1.0, -1.0, -1.0,  1.0, -1.0, -1.0, -1.0, -1.0,  1.0,  1.0, -1.0,  1.0, -1.0,  1.0,  1.0, -1.0,
           -1.0, -1.0, -1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0, -1.0, -1.0, -1.0,  1.0,  1.0,  1.0, -1.0,  1.0, -1.0, -1.0,  1.0,  1.0, -1.0, -1.0, -1.0,
           1.0, -1.0, -1.0, -1.0, -1.0, -1.0,  1.0, -1.0,  1.0, -1.0,  1.0, -1.0,  1.0,  1.0, -1.0,  1.0, -1.0,  1.0,  1.0,  1.0,  1.0, -1.0,  1.0, -1.0,
           -1.0, -1.0, -1.0,  1.0, -1.0, -1.0,  1.0, -1.0, -1.0,  1.0,  1.0, -1.0, -1.0,  1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,  1.0,  1.0,  1.0, -1.0,
           1.0,  1.0,  1.0,  1.0, -1.0, -1.0, -1.0,  1.0,  1.0, -1.0, -1.0,  1.0, -1.0,  1.0, -1.0, -1.0,  1.0,  1.0,  1.0,  1.0, -1.0,  1.0, -1.0, -1.0,
           -1.0,  1.0,  1.0,  1.0, -1.0,  1.0,  1.0,  1.0, -1.0,  1.0,  1.0,  1.0,  1.0,  1.0, -1.0, -1.0,  1.0, -1.0, -1.0, -1.0, -1.0, -1.0,  1.0, -1.0,
           -1.0,  1.0,  1.0,  1.0,  1.0, -1.0,  1.0,  1.0,  1.0, -1.0, -1.0,  1.0,  1.0, -1.0, -1.0, -1.0, -1.0,  1.0,  1.0, -1.0,  1.0,  1.0, -1.0,  1.0,
           1.0, -1.0,  1.0, -1.0,  1.0, -1.0, -1.0,  1.0, -1.0, -1.0, -1.0,  1.0,  1.0,  1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,  1.0,  1.0,
           1.0, -1.0, -1.0, -1.0,  1.0, -1.0,  1.0, -1.0,  1.0,  1.0, -1.0, -1.0,  1.0, -1.0, -1.0,  1.0, -1.0,  1.0, -1.0, -1.0, -1.0, -1.0, -1.0,  1.0,
           -1.0, -1.0,  1.0, -1.0,  1.0, -1.0,  1.0,  1.0,  1.0, -1.0,  1.0,  1.0,  1.0,  1.0, -1.0,  1.0, -1.0,  1.0, -1.0,  1.0,  1.0, -1.0, -1.0,  1.0,
           -1.0,  1.0,  1.0,  1.0, -1.0, -1.0, -1.0,  1.0,  1.0, -1.0, -1.0, -1.0, -1.0,  1.0,  1.0,  1.0,  1.0, -1.0, -1.0,  1.0,  1.0, -1.0,  1.0,  1.0,
           1.0,  1.0, -1.0, -1.0, -1.0,  1.0, -1.0,  1.0,  1.0,  1.0,  1.0, -1.0,  1.0, -1.0,  1.0, -1.0, -1.0,  1.0,  1.0, -1.0,  1.0, -1.0,  1.0, -1.0,
           -1.0, -1.0, -1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0, -1.0, -1.0,  1.0,  1.0, -1.0,  1.0, -1.0, -1.0, -1.0,  1.0,  1.0, -1.0,  1.0,
           -1.0,  1.0,  1.0,  1.0, -1.0, -1.0, -1.0, -1.0,  1.0,  1.0,  1.0, -1.0, -1.0,  1.0, -1.0,  1.0, -1.0,  1.0, -1.0, -1.0, -1.0,  1.0,  1.0,  1.0,
           -1.0,  1.0, -1.0,  1.0,  1.0, -1.0,  1.0, -1.0,  1.0,  1.0, -1.0,  1.0, -1.0,  1.0, -1.0,  1.0,  1.0, -1.0,  1.0, -1.0,  1.0,  1.0, -1.0,  1.0,
           -1.0,  1.0,  1.0, -1.0, -1.0, -1.0, -1.0, -1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0,  1.0, -1.0, -1.0, -1.0, -1.0,  1.0,  1.0, -1.0,  1.0,
           -1.0, -1.0,  1.0,  1.0,  1.0,  1.0, -1.0,  1.0,  1.0, -1.0, -1.0,  1.0,  1.0,  1.0, -1.0,  1.0,  1.0, -1.0, -1.0,  1.0, -1.0, -1.0, -1.0, -1.0,
           1.0,  1.0, -1.0, -1.0,  1.0,  1.0, -1.0, -1.0, -1.0,  1.0,  1.0, -1.0,  1.0, -1.0,  1.0, -1.0,  1.0, -1.0,  1.0, -1.0,  1.0, -1.0, -1.0, -1.0,
           1.0, -1.0,  1.0, -1.0, -1.0, -1.0,  1.0,  1.0, -1.0,  1.0,  1.0, -1.0, -1.0,  1.0,  1.0, -1.0,  1.0,  1.0, -1.0, -1.0];

    let data_size = y.len();
    let input_dim = x[0].len();

    let x_flatten: Vec<f32> = x.clone().into_iter().flatten().collect::<Vec<f32>>();
    let x_ptr: *mut f32 = Vec::leak(x_flatten.clone()).as_mut_ptr();
    let y_ptr: *mut f32 = Vec::leak(y.clone()).as_mut_ptr();

    let cluster_num = 32;
    let gamma = 1.0;

    let rbf: *mut RadicalBasisFunctionNetwork = init_rbf(input_dim as i32, cluster_num, gamma);
    train_rbf_rosenblatt(rbf, x_ptr, y_ptr, 10000000, 0.001, input_dim as i32, data_size as i32);

    println!("");
    println!("\n Multi Cross : RBF Classification : KO");
    println!("");
    for i in 0..data_size {
        let input_ptr: *mut f32 = Vec::leak(x[i].clone()).as_mut_ptr();
        let output = predict_rbf_classification(rbf, input_ptr);
        println!("X: {:?}, Y: {:?} ---> RBF model: {:?}", x[i], y[i], output);
    }
    println!("");

    free_rbf(rbf);
}